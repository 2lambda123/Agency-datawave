version: '2.2'
services:
  discovery:
    image: consul:1.3.0
    hostname: discovery
    environment:
      - 'CONSUL_LOCAL_CONFIG={"datacenter": "demo_dc", "disable_update_check": true}'
      - CONSUL_BIND_INTERFACE=eth0
    # defined as host:container
    ports:
      - "8400:8400"
      - "8500:8500"
      - "8600:53"
    networks:
      - demo

  messaging:
    image: rabbitmq:3.7.7-alpine
    volumes:
      - ${RABBITMQ_CONFIG_DIR:-./rabbitmq-config}:/etc/rabbitmq
    environment:
      - TCP_PORTS=15672, 5672
      - RABBITMQ_ERLANG_COOKIE="mycookie"
    ports:
      - "15672:15672"
    expose:
      - 5672
      - 5671
      - 15671
      - 15672
    networks:
      - demo
    depends_on:
      discovery:
        condition: service_started

  zookeeper:
    image: docker.io/bitnami/zookeeper:3
    ports:
      - "2181:2181"
    networks:
      - demo
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: docker.io/bitnami/kafka:2
    ports:
      - "9093:9093"
    networks:
      - demo
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://127.0.0.1:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      zookeeper:
        condition: service_started
  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    networks:
      - demo
    environment:
      - KAFKA_BROKERCONNECT=kafka:9092
    depends_on:
      kafka:
        condition: service_started

  configuration:
    image: datawave/config-service:1.4
    command:
      - --spring.output.ansi.enabled=ALWAYS
      - --spring.profiles.active=consul,native,open_actuator
      - --spring.cloud.consul.host=discovery
      - --spring.cloud.config.server.native.searchLocations=file:///microservice-config
    environment:
      - 'KEYSTORE_LOCATION=classpath:/testServer.p12'
      - KEYSTORE_PASSWORD=ChangeIt
      - KEY_ALIAS=certificate
    ports:
      - "8888:8888"
    volumes:
      - ${CONFIG_DIR:-./config}:/microservice-config:ro
    networks:
      - demo
    depends_on:
      messaging:
        condition: service_started

  cache:
    image: datawave/hazelcast-service:1.6
    scale: 3
    command:
      - --spring.profiles.active=consul,compose
      - --spring.output.ansi.enabled=ALWAYS
      - --spring.cloud.consul.host=discovery
    ports:
      - "5701-5703"
      - "8080"
      - "8443"
    networks:
      - demo
    healthcheck:
      test: curl -f http://localhost:8080/cache/mgmt/health
      interval: 30s
      timeout: 10s
      retries: 8
      start_period: 80s
    depends_on:
      configuration:
        condition: service_started

  authorization:
    image: datawave/authorization-service:1.9
    command:
      - --spring.output.ansi.enabled=ALWAYS
      - --spring.profiles.active=consul,mock,compose
      - --spring.cloud.consul.host=discovery
    ports:
      - "8080"
      - "8443"
    networks:
      - demo
    healthcheck:
      test: curl -f http://localhost:8080/authorization/mgmt/health
    depends_on:
      cache:
        condition: service_healthy

  query-state:
    image: datawave/query-state-storage
    command:
      - --spring.output.ansi.enabled=ALWAYS
      - --spring.profiles.active=consul,compose
      - --spring.cloud.consul.host=discovery
    ports:
      - "8080"
      - "8443"
    networks:
      - demo
    healthcheck:
      test: curl -f http://localhost:8080/query-state/mgmt/health
    depends_on:
      cache:
        condition: service_healthy

  audit:
    image: datawave/audit-service:1.9
    command:
      - --spring.output.ansi.enabled=ALWAYS
      - --spring.profiles.active=consul,compose
      - --spring.cloud.consul.host=discovery
    ports:
      - "8080"
      - "8443"
    networks:
      - demo
    healthcheck:
      test: curl -f http://localhost:8080/audit/mgmt/health
    depends_on:
      authorization:
        condition: service_healthy

  query:
    image: datawave/query-service
    command:
      - --spring.output.ansi.enabled=ALWAYS
      - --spring.profiles.active=consul,compose,remoteauth
      - --spring.cloud.consul.host=discovery
    ports:
      - "8080:8080"
      - "8443:8443"
    networks:
      - demo
    healthcheck:
      test: curl -f http://localhost:8080/query/mgmt/health
    depends_on:
      audit:
        condition: service_healthy

networks:
  demo:
